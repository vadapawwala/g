## app.component.html ##

<h1>{{str}}</h1>
<button (click)="showAlert()">Click Me</button>
<div class="container mt-5">
<body ng-controller="MyController" ng-init="init()">
    <h1>Addition Example</h1>
  <div class="mb-3">

    <label for="num1"  ng-model="num1" class="form-label">Number 1:</label>
    <input type="number" id="num1" [(ngModel)]="num1" class="form-control">
 </div>
  <div class="mb-3">
    <label for="num2" ng-model="num2" class="form-label">Number 2:</label>
    <input type="number" id="num2" [(ngModel)]="num2" class="form-control">
  </div>

  <button 
    (click)="addNumbers()" 
    [disabled]="num1 === null || num2 === null" 
    class="btn btn-primary" >
    Add
  </button>

  <div *ngIf="showResult" class="mt-3" ng-show="isVisible">
    <p>The result is: <span ng-bind>{{ result }}</span></p>
  </div>
</body>
</div>

<div class="container mt-5">
  <form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
    <div class="form-group">
      <label for="username">Username</label>
      <input id="username" formControlName="username" type="text" class="form-control" />
      <div *ngIf="loginForm.get('username')?.invalid && loginForm.get('username')?.touched" class="text-danger">
        Username is required and must be at least 5 characters long.
      </div>
    </div>

    <div class="form-group">
      <label for="password">Password</label>
      <input id="password" formControlName="password" type="password" class="form-control" />
      <div *ngIf="loginForm.get('password')?.invalid && loginForm.get('password')?.touched" class="text-danger">
        Password must contain at least one uppercase letter, one number, and one special character.
      </div>
    </div>

    <button type="submit" class="btn btn-primary" [disabled]="loginForm.invalid">Login</button>
  </form>

  <div *ngIf="successMessage" class="alert alert-success mt-3">
    {{ successMessage }}
  </div>
</div>

<router-outlet></router-outlet>


## app.component.ts ##

import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'tanazzamodi';
str="Welcome to School of Computer Science NWC";
showAlert() {
    alert('Button clicked!');
  }
 num1: number = 0;
  num2: number = 0;
  result: number | null = null;
  showResult: boolean = false;

  addNumbers() {
    this.result = this.num1 + this.num2;
    this.showResult = true;
}

loginForm: FormGroup;
  successMessage: string | null = null;

  constructor(private fb: FormBuilder) {
    this.loginForm = this.fb.group({
      username: ['', [Validators.required, Validators.minLength(5)]],
      password: ['', [
          Validators.required,
          Validators.minLength(6),
          Validators.pattern(/(?=.*[A-Z])(?=.*\d)(?=.*[\W_])/), // Custom password pattern
        ]]
    });
  }

  onSubmit(): void {
    if (this.loginForm.valid) {
      this.successMessage = 'Welcome!';
      this.loginForm.reset();
    }
  }
}


## app.module.ts ##

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { ReactiveFormsModule } from '@angular/forms';


@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }


